#+SETUPFILE: ~/site/tpl/link-tpl.org
#+TITLE: gRPC
#+OPTIONS: toc:nil
#+OPTIONS: num:nil

*Google 开源的基于 HTTP/2 协议的，使用 Protocol Buffers 作为描述语言的 RPC 框架。*

/目前是 CNCF 的孵化项目，估计也将成为云原生的事实上的服务调用标准，前途不可限量。/

* Protocol Buffer

https://developers.google.com/protocol-buffers

Google 开源的语言与平台无关的可扩展的结构化数据序列化，用于通信，存储等，类似 XML，但是更加的小巧、简洁和高效。
定义构造数据的方式，然后生成各种语言的源代码（不止提供数据结构，还提供了存取和序列化反序列化接口）。

安装编译器（用于将 .proto 文件生成不同语言的源代码）：

#+begin_src sh
  # macOS
  brew install protobuf -> protoc 命令
  # Ubuntu
  apt install protobuf-compiler
#+end_src

它的工作流程是，首先书写 .proto 文件，然后使用 protoc 编译器将 .proto 编译成具体语言的源代码，源代码提供了基本的
存取和序列化序列化接口，再然后在你的工程中引入源代码，开始使用。

- [[file:write-proto-spec.org][书写 .proto 规范]]
- [[file:proto-generate-source-code.org][生成源代码]]

* gRPC

https://grpc.io/about/

应用场景：

- 微服务架构下，高效的连接不同语言的服务 - 微服务通信
- 移动设备、浏览器客户端与后端通信 - C/S 模式通信
- 生成高效的客户端库

核心功能：

- 10 种常用语言的客户端库 - 支持大部分常用语言
- 一个简单的服务定义框架，实现高效的线上通信
- 基于 http/2 的双向传输流
- 可插拔的身份验证，追踪，负载均衡和健康检测

* gRPC-go

* 资料

- [[https://cloud.google.com/apis/design/][Google: API 设计指南]] 适用于 REST API 和 gRPC API
