#+SETUPFILE: ~/site/tpl/wiki-tpl.org
#+TITLE: InfluxDB v1.x
#+DATE: 2021-04-23 14:02:41

*Retention policy DURATION* 决定 InfluxDB 保留数据的时长。 *SHARD DURATION* 决定子语句确定分片组覆盖的时间范围。对应关系：

| Retention policy DURATION | Shard Group Duration |
| < 2 days | 1 hour  |
| >= 2 days and <= 6 months | 1 day |
| > 6 months | 7 day||

* InfluxQL

** SELECT 语句

   #+begin_src
     SELECT <field_key>[,<field_key>,<tag_key>] FROM <measurement_name>[,<measurement_name>]
   #+end_src

   当 SELECT 中包含 tag 时，只要需要同时包含一个 field。当 tag 和 field 的名字相同的时候可以携带标识符类型来区分。
   比如： ="<field_key>"::field= 表示 field， ="<tag_key>::tag"= 表示 tag。

** FROM 语句

   =FROM= 语句支持一个或者多个 measurement(s)：

   - =FROM <measurement_name>= 查询单个表
   - =FROM <measurement_name>,<measurement_name>= 查询多个表
   - =FROM <database_name>.<retention_policy_name>.<measurement_name>= 指定数据库和保留策略
   - =FROM <database_name>..<measurement_name>= 指定数据库，使用默认的保留策略

*** 引号

    如果标识符包含除了 =[A-z,0-9,_]= 以外的字符、以数字开头或者是 InfluxQL 关键则，那么标识符必须用双引号引起来。
    虽然不总是必要，但是建议你使用双引号。

*** 范例

    查询所有的 fields =SELECT *::field= ，但是不能通过这个方法来查询所有的 tags。

    数学运算： =SELECT ("water_level" * 2) + 4 FROM "h2o_feet"= 。

    常见 SELECT 问题：在 SELECT 中只包含 tag，会查询不到数据。

** WHERE 语句

   =WHERE= 基于 fields，tags 和 timestamps 的过滤。

   #+begin_src
     SELECT_clause FROM_clause WHERE <conditional_expression> [(AND|OR) <conditional_expression> [...]]
   #+end_src

   *注意* InfluxDB 不支持在 WHERE 语句中用多个时间范围之间用 =OR= 运算。如下语句会返回空：

   #+begin_src
     > SELECT * FROM "absolutismus" WHERE time = '2016-07-31T20:07:00Z' OR time = '2016-07-31T23:07:17Z'
   #+end_src

*** Fields

    #+begin_src
    field_key <operator> ['string' | boolean | float | integer]
    #+end_src

    field 值支持字符串，布尔，浮点型和整型比较。 =WHERE= 中字符串使用单引号。

    支持的比较运算符：

    | Operator | Meaning  |
    |----------+----------|
    | ~=~      | 等于     |
    | ~<>~     | 不等于   |
    | ~!=~     | 不等于   |
    | ~>~      | 大于     |
    | ~>=~     | 大于等于 |
    | ~<~      | 小于     |
    | ~<=~     | 小于等于 |

*** Tags

    #+begin_src
    tag_key <operator> ['tag_value']
    #+end_src

    tags 的值要使用单引号。支持的运算符：

    | Operator | Meaning |
    |----------+---------|
    | ~=~      | 等于    |
    | ~<>~     | 不等于  |
    | ~!=~     | 不等于  |

*** Timestamps

    对于大部分的 =SELECT= 语句，默认的时间范围是 =1677-09-21T00:12:43.145224194Z= 和 =2262-04-11T23:47:16.854775806Z= 之间。

    =SELECT= 使用 =GROUP BY time()= 时，默认的时间范围是 =1677-09-21T00:12:43.145224194Z= 和 =now()= 之间。

** GROUP BY 语句

   =GROUP BY= 对查询结果进行分组：

   - 基于一个或者多个 tags
   - 指定时间间隔

   *注意：* 你不可以对 fields 使用 =GROUP BY= 。

*** GROUP BY tags

    #+begin_src
    SELECT_clause FROM_clause [WHERE_clause] GROUP BY [* | <tag_key>[,<tag_key]]
    #+end_src

    =GROUP BY *= 按照所有 tag 分组

    =GROUP BY <tag_key>= 按照单个 tag 分组

    =GROUP BY <tag_key>,<tag_key>= 多个 tag 分组，tag 的顺序无关紧要

    *如果包含 =WHERE= 语句， =GROUP BY= 语句必须出现在 =WHERE= 之后*

*** GROUP BY time intervals

**** Basic GROUP BY time() syntax

     #+begin_src
     SELECT <function>(<field_key>) FROM_clause WHERE <time_range> GROUP BY time(<time_interval>),[tag_key] [fill(<fill_option>)]
     #+end_src

     - =time(time_interval)= 按照持续时间进行分组
     - =fill(<fill_option>)= 可选的，它会更改为没有数据的时间间隔报告的值

**** Advanced GROUP BY time() syntax

     #+begin_src
     SELECT <function>(<field_key>) FROM_clause WHERE <time_range> GROUP BY time(<time_interval>,<offset_interval>),[tag_key] [fill(<fill_option>)]
     #+end_src

** INTO 语法

   INTO 将查询结果写入到用户指定的 measurment。

   #+begin_src
   SELECT_clause INTO <measurement_name> FROM_clause [WHERE_clause] [GROUP_BY_clause]
   #+end_src

   =measurement_name= 与 FROM 后紧跟的库表语法规范类似。

** ORDER BY time DESC

   #+begin_src
   SELECT_clause [INTO_clause] FROM_clause [WHERE_clause] [GROUP_BY_clause] ORDER BY time DESC
   #+end_src

   如果包含 =GROUP BY= 条件的话， =ORDER by time DESC= 必须出现在 =GROUP BY= 之后。如果查询包含 =WHERE= 但是没有
   =GROUP BY= 条件， =ORDER by time DESC= 必须在 =WHERE= 之后。

** LIMIT 和 SLIMIT 语句

   =LIMIT= 和 =SLIMIT= 限制 points 和 series 查询的返回数量。


*** LIMIT 语句

    #+begin_src
    SELECT_clause [INTO_clause] FROM_clause [WHERE_clause] [GROUP_BY_clause] [ORDER_BY_clause] LIMIT <N>
    #+end_src

    注意 =LIMIT= 必须放在上面所有语句的最后。

*** SLIMIT 语句

    #+begin_src
      SELECT_clause [INTO_clause] FROM_clause [WHERE_clause] GROUP BY *[,time(<time_interval>)] [ORDER_BY_clause] SLIMIT <N>
    #+end_src


** OFFSET 和 SOFFSET 语句

   =OFFSET <N>= 对查询结果进行 N points 的分页。

   #+begin_src
     SELECT_clause [INTO_clause] FROM_clause [WHERE_clause] [GROUP_BY_clause] [ORDER_BY_clause] LIMIT_clause OFFSET <N> [SLIMIT_clause]
   #+end_src

   =OFFSET= 需要和 =LIMIT= 一起使用，否则会导致查询结果不一致。整体表达的是： =OFFSET= 之后的 =LIMIT= 个元素。


** 时区（time zone）语句

   =tz()= 语句指定时区[fn:1]。

   #+begin_src
     SELECT_clause [INTO_clause] FROM_clause [WHERE_clause] [GROUP_BY_clause] [ORDER_BY_clause] [LIMIT_clause] [OFFSET_clause] [SLIMIT_clause] [SOFFSET_clause] tz('<time_zone>')
   #+end_src

   默认情况下，InfluxDB 存储和返回 UTC 时间戳。

* Footnotes

[fn:1] https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List
